---
import * as general from 'lucide';
import * as brand from 'simple-icons';

type GeneralName = keyof typeof general;
type BrandName = keyof typeof brand;

type Name = GeneralName | BrandName;

interface Props {
	name: Name;
}

function getPathFromIconName(name: Name) {
	if (Object.hasOwn(general, name)) {
		return getPathFromGeneralIconName(general[name as GeneralName] as general.IconNode);
	}
	if (Object.hasOwn(brand, name)) {
		return getPathFromBrandIconName(brand[name as BrandName] as brand.SimpleIcon);
	}
	throw new Error(`Unknown icon name: ${name}`);
}

function getPathFromGeneralIconName(icon: general.IconNode) {
	const paths = icon.at(2);
	if (!(paths && Array.isArray(paths))) {
		return "";
	}

	return paths.map(([shape, attributes]) => {
			return `<${shape} ${Object.entries(attributes).map(([key, value]) => {
				return `${key}="${value}"`;
			}).join(' ')}></${shape}>`
	}).join('');
}

function getPathFromBrandIconName(icon: brand.SimpleIcon) {
	return `<path d="${icon.path}"></path>`;
}
---

<svg height="24" width="24" fill="currentColor"  set:html={getPathFromIconName(Astro.props.name)} />